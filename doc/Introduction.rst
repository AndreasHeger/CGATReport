.. _Installation:

************
Installation
************

The sphinxreport module is an extension for :mod:`sphinx`
that provides facilities for data retrieval and data rendering
within reStructured text. 

This section explains the installation and configuration of sphinxreport.

.. _Requirements:

Requirements
************

sphinxreport requires the following software

   * `Python <http://www.python.org>`_ (2.5.2 or higher) 
   * `SQLAlchemy <http://www.sqlalchemy.org/>`_ (0.4.8 or higher)
   * `matplotlib <http://matplotlib.sourceforge.net/>`_ (0.98.1 or higher)
   * `sphinx <http://sphinx.pocoo.org/>`_ (0.5-1 or higher)

Additional functionality is available if the following modules are installed:
   * `web.py <http://webpy.org>`_ (0.3 or higer)

Installation
************

In order to install the extension, download the latest sources from *TODO* and unpack:

   tar -xvzf sphinx-report.tar.gz

Alternatively, check out the the latest code from the subversion repository::

   svn checkout http://sphinx-report.googlecode.com/svn/trunk/ sphinx-report-read-only

To install, type::

   python setup.py build
   python setup.py install

First steps
***********

To get running quickly, use the the :file:`sphinxreport-quickstart`` to
create a skeleton project in the directory ``newproject``::

   sphinxreport-quickstart -d newproject

Enter ``newproject`` and build the skeleton report::

   make html

Open :file:`newproject/_build/html/index.html` in your browser 
to view the skeleton documentation. 

At this stage you can review :ref:`Configuration` options
in the file :file:`conf.py` and then start adding content
to your report. See the :ref:`Tutorials` on how to do this.

If you already have a sphinx document but would like to use the
capabilities of sphinxreport, add the following entries to the variable 
:data:`extensions` in the sphinx configuration file :file:`conf.py`::

   extensions.extend( [ 'SphinxReport.only_directives', 
              'SphinxReport.roles',
              'SphinxReport.errors_directive',
              'SphinxReport.report_directive' ] )

.. _Configuration:

Configuration
*************

Sphinx and the sphinxreport extension read configuration details
from the file :file:`sphinxreport.ini` at the top-level of the
installation. The following variables are recognized in the
``[report]`` section:

.. glossary::

   cachedir
      string

      directoryname for cache. Set to ``None`` to disable caching.

      Example::

         cachedir=_cache

   urls
      tuple 

      urls to include within the annotation of an image. Possible values are:

      code
         add link to source code of the :term:`Tracker`
      rst
         show rst generated by sphinxreport
      data
         add link to raw data. Note that this function requires that
	 active content is enabled (see :ref:`Tutorial7`)

      Example::

         urls=("code", "rst", "data")

   sql_backend
       string

       the database backend for :class:`TrackerSQL`. The backend follows
       the sphinxreport`sqlalchemy` syntax. 

       Example for an sqlite connection (requires sqlite3) ::
              
          sql_backend = "sqlite:///%s/csvdb" % os.path.abspath(".")

   show_errors 

      boolean
      if set to true, show errors into the documents

   images
      tuple
      
      additional images that should be rendered. A ``,``-separated list
      of values of tuples of three values each:
      ``<name>,<suffix>,size``. The ``suffix`` determines the file
      type. For example, the following configuration will add an
      image in png format of size 200 called ``hires`` and an
      image in eps format of size 50 called ``eps``.

      images=hires,hires.png,200,eps,eps,50

Configuration options that are general for any sphinx
document are in the file :file:`conf.py`. See the `sphinx
documentation <http://sphinx.pocoo.org/config.html>`_. for a list of
all configuration options.































